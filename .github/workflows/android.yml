# A clear, descriptive name for the workflow
name: Android Build & Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # STEP 1: Check out your repository's code. This MUST come first.
      # The runner now has access to your files, including your gradlew script.
      - name: Checkout repository
        uses: actions/checkout@v4

      # STEP 2: Set up the Java environment.
      # Now that the files are checked out, it can find them for caching.
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
          # This is a more robust path for caching in most Android projects.
          # It looks for .gradle files in all subdirectories and the wrapper properties.
          cache-dependency-path: |
            **/*.gradle*
            gradle/wrapper/gradle-wrapper.properties

      # STEP 3: Grant execute permissions to the Gradle wrapper.
      - name: Make gradlew executable
        run: chmod +x gradlew

      # STEP 4: Run the build.
      - name: Build with Gradle
        # It's good practice to use --no-daemon on CI servers.
        run: ./gradlew build --no-daemon