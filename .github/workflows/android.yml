# This name is more descriptive for a Continuous Integration workflow for an Android project.
name: Android CI

# This block defines the triggers for the workflow. It's the same as your original.
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # A single job in this workflow, named 'build'.
  build:

    # The type of virtual machine to run the job on. 'ubuntu-latest' is a great default.
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository's code. This step was missing and is essential.
      # The workflow needs access to your code to run gradlew.
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up the Java environment required for Android builds.
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
          # The cache-dependency-path is optional but helps speed up builds
          # by caching the Gradle wrapper and dependencies.
          # Your original path was kept, but a more common setup might be:
          # cache-dependency-path: |
          #  **/*.gradle*
          #  gradle-wrapper.properties
          cache-dependency-path: |
            sub-project/*.gradle*
            sub-project/**/gradle-wrapper.properties

      # Step 3: Grant execute permissions to the Gradle wrapper script.
      # This is often necessary as git might not preserve file permissions.
      - name: Make gradlew executable
        run: chmod +x gradlew

      # Step 4: Run the build command using the Gradle wrapper.
      - name: Build with Gradle
        run: ./gradlew build

